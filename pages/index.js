import Head from 'next/head'
import Image from 'next/image'
import { useEffect, useState } from 'react'
import styles from '../styles/Home.module.css'
import { ConnectButton } from '@rainbow-me/rainbowkit'
import {
  useAccount,
  useContractRead,
  useContractWrite,
  usePrepareContractWrite,
  useWaitForTransaction
} from 'wagmi'
import abi from '/NFTick.json'


export default function Home() {
  const [allEvents, setAllEvents] = useState();
  const [myNfticks, setMyNfticks] = useState();
  const [myEvents, setMyEvents] = useState();
  const { isConnected } = useAccount();

  const { data: AllEventsCreated } = useContractRead({
    addressOrName: '0x1C60Fa4f5e657c5A5A4dd3eA2f3009933b6B1a0c',
    contractInterface: abi,
    functionName: 'fetchAllEventsCreated',
    watch: true,
    onSettled(data, error) {
      console.log('settled', { data, error })
    }
  })

  useEffect(() => {
    if (AllEventsCreated) {
      setAllEvents(AllEventsCreated)
    }
  }, [AllEventsCreated])

  const allNfticks = useContractRead({
    addressOrName: '0x1C60Fa4f5e657c5A5A4dd3eA2f3009933b6B1a0c',
    contractInterface: abi,
    functionName: 'fetchAllMyNfticks',
    watch: true,
    onSettled(data, error) {
      console.log('settled', { data, error })
    }
  })

  useEffect(() => {
    if (allNfticks) {
      setMyNfticks(allNfticks)
    }
  }, [allNfticks])

  const allMyEvents = useContractRead({
    addressOrName: '0x1C60Fa4f5e657c5A5A4dd3eA2f3009933b6B1a0c',
    contractInterface: abi,
    functionName: 'fetchAllMyEvents',
    watch: true,
    onSettled(data, error) {
      console.log('settled', { data, error })
    }
  })
  useEffect(() => {
    if (allMyEvents) {
      setMyEvents(allMyEvents)
    }
  }, [allMyEvents])


  const { config } = usePrepareContractWrite({
    addressOrName: '0x1C60Fa4f5e657c5A5A4dd3eA2f3009933b6B1a0c',
    contractInterface: abi,
    functionName: 'createEvent'
  });

  const {
    data: eventData,
    write: createEvent,
  } = useContractWrite(config);

  const { isSuccess: eventSuccess } = useWaitForTransaction({
    hash: eventData?.hash
  });

  const eventCreated = eventSuccess;

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>
        <ConnectButton />

        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.js</code>
        </p>
        <section><p>Create Event</p>
          {isConnected && (
            <button
              onClick={() => createEvent?.()}
            > Create Event
            </button>
          )}
        </section>

        <section><p>Buy Nftick</p>
          {isConnected && (
            <button> Buy Nftick</button>
          )}
        </section>
        <section><p>View All Events Created </p>
          <p>{JSON.stringify(allEvents)} </p>
        </section>
        <section><p>View My Events</p>
          <p>{JSON.stringify(myEvents)} </p>
        </section>
        <section><p> View All My Nfticks</p>
          <p>{JSON.stringify(myNfticks)} </p>
        </section>
      </main>

    </div>
  )
}
